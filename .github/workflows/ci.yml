name: CI - Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '20'

jobs:
  frontend-build:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint check
        run: npm run lint || true # Don't fail on lint for now

      - name: Type check
        run: npx tsc --noEmit

      - name: Build frontend
        run: npm run build

      - name: Check bundle size
        run: |
          echo "## ðŸ“¦ Frontend Bundle Size" >> $GITHUB_STEP_SUMMARY
          ls -lh dist/assets/*.js | awk '{printf "- %s: **%s**\n", $9, $5}' >> $GITHUB_STEP_SUMMARY
          ls -lh dist/assets/*.css | awk '{printf "- %s: **%s**\n", $9, $5}' >> $GITHUB_STEP_SUMMARY

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: dist/
          retention-days: 7

  backend-build:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Type check backend
        working-directory: backend
        run: npm run typecheck

      - name: Build backend
        working-directory: backend
        run: npm run build
      
      - name: Check backend build output
        working-directory: backend
        run: |
          echo "## ðŸ“¦ Backend Build Output" >> $GITHUB_STEP_SUMMARY
          ls -lh dist/*.js | awk '{printf "- %s: **%s**\n", $9, $5}' >> $GITHUB_STEP_SUMMARY

      - name: Upload backend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: backend/dist/
          retention-days: 7

  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-build]
    if: always()
    
    steps:
      - name: Summary
        run: |
          echo "## âœ… Build Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Frontend:** ${{ needs.frontend-build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "**Backend:** ${{ needs.backend-build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸš€ Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "- To deploy, create a tag: \`git tag v2.0.0 && git push origin v2.0.0\`" >> $GITHUB_STEP_SUMMARY
          echo "- This will trigger the Docker build pipeline" >> $GITHUB_STEP_SUMMARY
